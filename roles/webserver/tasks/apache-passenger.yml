- name: Ensure apache packages are installed
  apt: pkg={{item}}
  with_items:
    - libcurl4-openssl-dev
    - libssl-dev
    - zlib1g-dev
    - apache2-mpm-prefork
    - apache2-prefork-dev
    - libapr1-dev
    - libaprutil1-dev

# tiny bit of web scraping to ensure we have the latest passenger version installed
- name: get passenger version
  shell: curl https://www.phusionpassenger.com/download | grep "stable version"
  register: passenger_shell_output
  remote_user: deploy
  sudo: no

- name: set passenger version
  set_fact:
    passenger_version: '{{passenger_shell_output.stdout.split("stable version: ")[1].split("\n")[0]}}'

# inspiration: http://www.modrails.com/documentation/Users%20guide%20Apache.html#install_on_debian_ubuntu
- name: install passenger gem
  shell: gem install passenger --version {{passenger_version}} creates=~/.rvm/gems/ruby-{{ruby}}@global/gems/passenger-{{passenger_version}} executable=/bin/bash
  remote_user: deploy
  sudo: no

- name: install passenger mod
  command: rvm {{ruby}} do passenger-install-apache2-module --auto creates=~/.rvm/gems/ruby-{{ruby}}@global/gems/passenger-{{passenger_version}}/buildout/apache2/mod_passenger.so
  remote_user: deploy
  sudo: no

- name: configure apache and passenger
  template: src=passenger-{{item}}-config.j2 dest=/etc/apache2/mods-available/passenger.{{item}}
  with_items:
    - load
    - conf

- name: enable passenger
  file: src=/etc/apache2/mods-available/passenger.{{item}} dest=/etc/apache2/mods-enabled/passenger.{{item}} state=link
  with_items:
    - load
    - conf

- name: Ensure log file directories are present
  file: path=/var/log/apache2/{{item}} state=directory
  with_items: app_names

- name: Ensure application apache config files are present
  template: src=apache-config.j2 dest=/etc/apache2/sites-available/{{item}}.conf
  with_items: app_names
  notify:
    - restart apache
    - reload apache

- name: Ensure default apache site is disabled
  file: dest=/etc/apache2/sites-enabled/000-default.conf state=absent