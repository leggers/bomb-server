---
# inspiration from here: https://gist.github.com/ihassin/8106956 and https://github.com/Ansibles/mysql
- name: Install mySQL
  apt: pkg={{item}}
  with_items:
    - mysql-server
    - mysql-client
    - libmysqlclient-dev # for mysql2 gem installation
    - python-mysqldb # so the ansible database setup commands work

- name: Start mySQL
  service: name=mysql state=started enabled=yes

- name: Remove test database
  mysql_db: name=test state=absent

- name: Database user setup
  mysql_user: user={{db_user}} host='%' password={{db_password}} priv=*.*:ALL,GRANT state=present

- name: Ensure anonymous users aren't in database
  mysql_user: user='' host={{item}} state=absent
  with_items:
    - "{{ansible_hostname}}"
    - 127.0.0.1
    - ::1
    - localhost

- name: Setup databases
  mysql_db: name=bomb_{{item}}_{{group_names[1]}} state=present
  with_items: app_names

- name: set root user's password
  mysql_user: name=root password={{mysql_root_password}} host={{item}}
  with_items:
    - "{{ansible_hostname}}"
    - 127.0.0.1
    - ::1
    - localhost
  when: ansible_hostname != 'localhost'

- name: set root user's password
  mysql_user: name=root password={{mysql_root_password}} host={{item}}
  with_items:
    - 127.0.0.1
    - ::1
    - localhost
  when: ansible_hostname == 'localhost'

  # see http://docs.ansible.com/mysql_user_module.html
- name: copy over .my.cnf for root user for ansible idempotency
  template: src=.my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600

- name: copy over .my.cnf for deploy user so ansible can connect to database with that user
  template: src=.my.cnf.j2 dest=/home/deploy/.my.cnf owner=deploy group=deploy mode=0600